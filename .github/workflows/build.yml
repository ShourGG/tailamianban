name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build for Linux
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: Install frontend dependencies
        working-directory: ./web
        run: npm ci

      - name: Build frontend
        working-directory: ./web
        run: npm run build
        env:
          NODE_ENV: production

      - name: Copy frontend to dist
        run: |
          rm -rf dist
          cp -r web/dist dist

      - name: Build Linux AMD64
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
            -ldflags="-s -w -X main.Version=${{ github.ref_name }} -X main.Build=release" \
            -o terraria-panel-linux-amd64 \
            ./cmd
        env:
          CGO_ENABLED: 0

      - name: Build Linux ARM64
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build \
            -ldflags="-s -w -X main.Version=${{ github.ref_name }} -X main.Build=release" \
            -o terraria-panel-linux-arm64 \
            ./cmd
        env:
          CGO_ENABLED: 0

      - name: Package releases
        run: |
          mkdir -p release
          
          # AMD64 package
          mkdir -p terraria-panel-amd64
          cp terraria-panel-linux-amd64 terraria-panel-amd64/terraria-panel
          cp -r dist terraria-panel-amd64/
          cp -r scripts terraria-panel-amd64/
          cp README.md terraria-panel-amd64/
          chmod +x terraria-panel-amd64/terraria-panel
          chmod +x terraria-panel-amd64/scripts/*.sh
          tar -czf release/terraria-panel-linux-amd64.tar.gz terraria-panel-amd64
          
          # ARM64 package
          mkdir -p terraria-panel-arm64
          cp terraria-panel-linux-arm64 terraria-panel-arm64/terraria-panel
          cp -r dist terraria-panel-arm64/
          cp -r scripts terraria-panel-arm64/
          cp README.md terraria-panel-arm64/
          chmod +x terraria-panel-arm64/terraria-panel
          chmod +x terraria-panel-arm64/scripts/*.sh
          tar -czf release/terraria-panel-linux-arm64.tar.gz terraria-panel-arm64

      - name: Generate checksums
        working-directory: ./release
        run: |
          sha256sum terraria-panel-linux-amd64.tar.gz > terraria-panel-linux-amd64.tar.gz.sha256
          sha256sum terraria-panel-linux-arm64.tar.gz > terraria-panel-linux-arm64.tar.gz.sha256

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/terraria-panel-linux-amd64.tar.gz
            release/terraria-panel-linux-amd64.tar.gz.sha256
            release/terraria-panel-linux-arm64.tar.gz
            release/terraria-panel-linux-arm64.tar.gz.sha256
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: terraria-panel-binaries
          path: release/
          retention-days: 7
