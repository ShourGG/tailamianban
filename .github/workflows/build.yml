name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Build Frontend
        run: |
          cd web
          npm install --registry=https://registry.npmmirror.com
          npm run build
          cd ..
          cp -r web/dist .
          
      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-dist
          path: dist/

  build-linux:
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Download Frontend
        uses: actions/download-artifact@v3
        with:
          name: frontend-dist
          path: dist/
      
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: Build Linux Binary
        run: |
          go mod tidy
          CGO_ENABLED=1 go build -ldflags="-s -w" -o terraria-panel-linux-amd64 cmd/main.go
          chmod +x terraria-panel-linux-amd64
          
      - name: Create Release Package
        run: |
          mkdir -p release/terraria-panel
          cp terraria-panel-linux-amd64 release/terraria-panel/terraria-panel
          cp -r scripts release/terraria-panel/
          echo '#!/bin/bash' > release/terraria-panel/run.sh
          echo './terraria-panel' >> release/terraria-panel/run.sh
          chmod +x release/terraria-panel/run.sh
          cd release
          tar -czf terraria-panel-linux-amd64.tar.gz terraria-panel
          
      - name: Upload Release Artifact
        uses: actions/upload-artifact@v3
        with:
          name: terraria-panel-linux
          path: release/terraria-panel-linux-amd64.tar.gz

  release:
    needs: build-linux
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            terraria-panel-linux/terraria-panel-linux-amd64.tar.gz
          body: |
            ## 泰拉瑞亚服务器管理面板
            
            ### 安装方法
            ```bash
            # 下载
            wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/terraria-panel-linux-amd64.tar.gz
            
            # 解压
            tar -xzf terraria-panel-linux-amd64.tar.gz
            cd terraria-panel
            
            # 运行
            ./run.sh
            ```
            
            默认账号：admin
            默认密码：admin123
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}